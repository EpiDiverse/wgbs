// base.config
// use this config file to modify process resource allocation


// PROCESS RESOURCES
process {

	// top-level configuration groups
	withLabel: "low" {
    	time = { 8.h * task.attempt }
    	memory = { 2.GB * task.attempt }
    	cpus = 2
	}

	withLabel: "tiny" {
		time = 1.h
		memory = 250.MB
		cpus = 1
	}

	withLabel: "finish" {
    	errorStrategy = { task.exitStatus in [140,143,137,104,134,139] ? 'retry' : 'finish' }
	}

	withLabel: "ignore" {
    	errorStrategy = { task.exitStatus in [140,143,137,104,134,139] ? 'retry' : 'ignore' }
	}


	// configuration for building directories for input reads
	withName: "stage_input_directories" {
	
		// label 'tiny'
		// label 'finish'
		maxRetries = 1
	}
	
	// configuration for building directories for merge reads
	withName: "stage_merge_directories" {
	
		// label 'tiny'
		// label 'finish'
		maxRetries = 1
	}


	// configuration for trimming reads
	withName: "read_trimming" {

		// label 'low'
		// label 'finish'
		cpus = { params.SE ? '1' : '2' }
		maxRetries = 1
	}


	// configuration for merging input + merge reads
	withName: "read_merging" {

		// label 'tiny'
		// label 'finish'
		memory = { 250.MB * task.attempt }
		cpus = { params.SE ? '1' : '2' }
		maxRetries = 1
	}


	// configuration for fastqc
	withName: "fastqc" {

		// label 'tiny'
		// label 'ignore'
		cpus = { params.SE ? '1' : '2' }
		maxRetries = 1
	}

	// configuration for "erne-bs5" alignment
	withName: "erne_bs5" {

		// label 'finish'
    	time = { 12.h * task.attempt }
    	memory = { 2.GB * task.attempt }
    	cpus = { 8 * task.attempt }
    	maxRetries = 2
	}

	// configuration for "segemehl" alignment
	withName: "segemehl" {

		// label 'finish'
    	time = { 2.d * task.attempt }
    	memory = { 24.GB * task.attempt }
    	cpus = { 8 * task.attempt }
    	maxRetries = 2
	}


	// configuration for "erne-bs5" post-processing
	withName: "erne_bs5_processing" {

		// label 'finish'		
		time = { 16.h * task.attempt }
		memory = { 14.GB * task.attempt }
		cpus = { 4 * task.attempt }    
		maxRetries = 2
	}


	// configuration for "segemehl" post-processing
	withName: "segemehl_processing" {
	
		// label 'low'
		// label 'finish'
		maxRetries = 1	
	}


	// configuration for bam merging
	withName: "bam_merging" {
	
		// label 'low'
		// label 'finish'
		maxRetries = 1
	}


	// configuration for lambda subsetting
	withName: "bam_subsetting" {

		// label 'low'
		// label 'finish'
		time = { 10.h * task.attempt }
		maxRetries = 1
	}


	// configuration for calculating statistics
	withName: "bam_statistics" {

		// label 'low'
		// label 'ignore'
		time = { 10.h * task.attempt }
		maxRetries = 1
	}


	// configuration for bam file preparation
	withName: "bam_processing" {
	
		// label 'low' 
		// label 'finish'
		maxRetries = 1	
	}


	// configuration for Picard MarkDuplicates
	withName: "Picard_MarkDuplicates" {

		// label 'low'
		// label 'finish'
		time = { 10.h * task.attempt }
		memory = { 10.GB * task.attempt }
		maxRetries = 2
	}


	// configuration for MethylDackel
	withName: "MethylDackel" {

		// label 'low'
		// label 'ignore'
		time = { 1.h * task.attempt }
		maxRetries = 1
	}


	// configuration for conversion rate estimation
	withName: "conversion_rate_estimation" {

		// label 'low'
		// label 'ignore'
		time = { 1.h * task.attempt }
		maxRetries = 1
	}
}