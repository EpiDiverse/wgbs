// base.config
// use this config file to modify process resource allocation


// PROCESS RESOURCES
process {

	// top-level configuration groups
	withLabel: "low" {
    	time = { 8.h * task.attempt }
    	memory = { 2.GB * task.attempt }
    	cpus = 2
	}

	withLabel: "tiny" {
		time = 2.h
		memory = 500.MB
		cpus = 1
	}

	withLabel: "finish" {
		maxRetries = 3
        errorStrategy = { ->
			if( (task.exitStatus in [140,141,143,137,104,134,139] && task.attempt > 3) || (!(task.exitStatus in [140,141,143,137,104,134,139]) && task.attempt > 1 ) ){
				return 'finish'
			} else if(task.exitStatus in [140,141,143,137,104,134,139]){
				return 'retry'
			} else {
				sleep(Math.pow(2, task.attempt) * 1000 as long);
				return 'retry'
			}
		}
	}

	withLabel: "ignore" {
		maxRetries = 3
        errorStrategy = { ->
			if( (task.exitStatus in [140,141,143,137,104,134,139] && task.attempt > 3) || (!(task.exitStatus in [140,141,143,137,104,134,139]) && task.attempt > 1 ) ){
				return 'ignore'
			} else if(task.exitStatus in [140,141,143,137,104,134,139]){
				return 'retry'
			} else {
				sleep(Math.pow(2, task.attempt) * 1000 as long);
				return 'retry'
			}
		}
	}



	// configuration for trimming reads
	withName: "read_trimming" {

		// label 'low'
		cpus = { params.SE ? '1' : '2' }
		maxRetries = 1
	}


	// configuration for merging input + merge reads
	withName: "read_merging" {

		// label 'tiny'
		memory = { 250.MB * task.attempt }
		cpus = { params.SE ? '1' : '2' }
	}


	// configuration for fastqc
	withName: "fastqc" {

		// label 'tiny'
		cpus = { params.SE ? '1' : '2' }
	}

	// configuration for "erne-bs5" alignment
	withName: "erne_bs5" {

    	time = { 6.h * Math.pow(2, task.attempt) }
    	memory = { 1.GB * Math.pow(2, task.attempt) }
    	cpus = { 8 * task.attempt }
	}

	// configuration for "segemehl" alignment
	withName: "segemehl" {

    	time = { 12.h * Math.pow(2, task.attempt) }
    	memory = { 8.GB * Math.pow(2, task.attempt) }
    	cpus = { 8 * task.attempt }
	}


	// configuration for "erne-bs5" post-processing
	withName: "erne_bs5_processing" {
	
		time = { 8.h * Math.pow(2, task.attempt) }
		memory = { 14.GB * task.attempt }
		cpus = { 4 * task.attempt }    
	}


	// configuration for lambda subsetting
	withName: "bam_subsetting" {

		// label 'low'
		time = { 10.h * task.attempt }
	}


	// configuration for calculating statistics
	withName: "bam_statistics" {

		// label 'low'
		time = { 10.h * task.attempt }
	}


	// configuration for Picard MarkDuplicates
	withName: "Picard_MarkDuplicates" {

		// label 'low'
		time = { 10.h * task.attempt }
		memory = { 10.GB * task.attempt }
	}


	// configuration for MethylDackel
	withName: "MethylDackel" {

		// label 'low'
		time = { 1.h * task.attempt }
	}


	// configuration for linear regression (sample alignments + duplicates)
	withName: "linear_regression" {

		// label 'low'
		time = { 1.h * task.attempt }
	}


	// configuration for conversion rate estimation
	withName: "conversion_rate_estimation" {

		// label 'low'
		time = { 1.h * task.attempt }
	}
}